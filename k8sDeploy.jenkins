pipeline {
    agent {label 'master'}

    stages {
        stage('checkout') {
            steps {
            checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/BENHALIMAmohamed/DevopsProject.git']]])            }
        }
        stage('Delete all Deployments&Services') {
        steps {
            
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                bat 'kubectl get pods'
                bat 'kubectl delete --all deployments'
                bat 'kubectl delete --all services'   
            }
        }
        } 

        stage('vote') {
        steps {
            
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                bat 'kubectl create -f  ./voting-app-deploy.yaml'
                bat 'kubectl create -f ./voting-app-service.yaml' 
                
            }
        }
        } 
        stage('result') {
        steps {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                bat 'kubectl create -f ./result-app-deploy.yaml'
                bat 'kubectl create -f ./result-app-service.yaml'
            }
        }
        }

        stage('Postgres database') {

        steps {
             catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                bat 'kubectl create -f ./postgres-deploy.yaml'
                bat 'kubectl create -f ./postgres-service.yaml'
            }
        }
        }
        stage('Redis') {

        steps {
             catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                bat 'kubectl create -f ./redis-deploy.yaml'
                bat 'kubectl create -f ./redis-service.yaml'
            }
    

        }
        }
          stage('worker') {

        steps {
             catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                bat 'kubectl create -f ./voting-app-service.yaml'
                
            }
    

        }
        }

    }
    post {
      success {
         emailext  attachLog: true, body: 'k8s deployment and services has been created succesufully', compressLog: true, subject: 'Docker_status', to: 'benhalimamohamed.ca@gmail.com'
            }
    }

}
